{
  "definitions": {},
  "resource": {
    "type": "object",
    "description": "The ``AWS::ApiGatewayV2::IntegrationResponse`` resource updates an integration response for an WebSocket API. For more information, see [Set up WebSocket API Integration Responses in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-integration-responses.html) in the *API Gateway Developer Guide*.",
    "properties": [
      {
        "name": "ResponseTemplates",
        "description": "The collection of response templates for the integration response as a string-to-string map of key-value pairs. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.",
        "optional": true,
        "type": {
          "type": "record",
          "description": "The collection of response templates for the integration response as a string-to-string map of key-value pairs. Response templates are represented as a key/value map, with a content-type as the key and a template as the value."
        }
      },
      {
        "name": "TemplateSelectionExpression",
        "description": "The template selection expression for the integration response. Supported only for WebSocket APIs.",
        "optional": true,
        "type": {
          "type": "string",
          "description": "The template selection expression for the integration response. Supported only for WebSocket APIs."
        }
      },
      {
        "name": "ResponseParameters",
        "description": "A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of ``method.response.header.{name}``, where name is a valid and unique header name. The mapped non-static value must match the pattern of ``integration.response.header.{name}`` or ``integration.response.body.{JSON-expression}``, where ``{name}`` is a valid and unique response header name and ``{JSON-expression}`` is a valid JSON expression without the ``$`` prefix.",
        "optional": true,
        "type": {
          "type": "record",
          "description": "A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of ``method.response.header.{name}``, where name is a valid and unique header name. The mapped non-static value must match the pattern of ``integration.response.header.{name}`` or ``integration.response.body.{JSON-expression}``, where ``{name}`` is a valid and unique response header name and ``{JSON-expression}`` is a valid JSON expression without the ``$`` prefix."
        }
      },
      {
        "name": "ContentHandlingStrategy",
        "description": "Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are ``CONVERT_TO_BINARY`` and ``CONVERT_TO_TEXT``, with the following behaviors:\n  ``CONVERT_TO_BINARY``: Converts a response payload from a Base64-encoded string to the corresponding binary blob.\n  ``CONVERT_TO_TEXT``: Converts a response payload from a binary blob to a Base64-encoded string.\n If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.",
        "optional": true,
        "type": {
          "type": "string",
          "description": "Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are ``CONVERT_TO_BINARY`` and ``CONVERT_TO_TEXT``, with the following behaviors:\n  ``CONVERT_TO_BINARY``: Converts a response payload from a Base64-encoded string to the corresponding binary blob.\n  ``CONVERT_TO_TEXT``: Converts a response payload from a binary blob to a Base64-encoded string.\n If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification."
        }
      },
      {
        "name": "IntegrationId",
        "description": "The integration ID.",
        "optional": false,
        "type": {
          "type": "string",
          "description": "The integration ID."
        }
      },
      {
        "name": "IntegrationResponseKey",
        "description": "The integration response key.",
        "optional": false,
        "type": {
          "type": "string",
          "description": "The integration response key."
        }
      },
      {
        "name": "ApiId",
        "description": "The API identifier.",
        "optional": false,
        "type": {
          "type": "string",
          "description": "The API identifier."
        }
      }
    ]
  },
  "attributes": {
    "type": "object",
    "description": "The ``AWS::ApiGatewayV2::IntegrationResponse`` resource updates an integration response for an WebSocket API. For more information, see [Set up WebSocket API Integration Responses in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-integration-responses.html) in the *API Gateway Developer Guide*.",
    "properties": [
      {
        "name": "IntegrationResponseId",
        "description": "Integration Response ID generated by service",
        "optional": true,
        "type": {
          "type": "string",
          "description": "Integration Response ID generated by service"
        }
      }
    ]
  },
  "$hash": "b4581c80bb9dfcb9e937e30c9840b468043538da"
}
