{
  "definitions": {
    "EnvironmentName": {
      "type": "string",
      "description": "Customer-defined identifier for the environment, unique per customer region.",
      "maxLength": 80,
      "minLength": 1,
      "pattern": "^[a-zA-Z][0-9a-zA-Z\\-_]*$"
    },
    "EnvironmentStatus": {
      "type": "string",
      "description": "The status of the environment.",
      "allowedValues": [
        "CREATING",
        "CREATE_FAILED",
        "AVAILABLE",
        "UPDATING",
        "DELETING",
        "DELETED",
        "UPDATE_FAILED",
        "UNAVAILABLE",
        "PENDING"
      ]
    },
    "UpdateStatus": {
      "type": "string",
      "description": "",
      "allowedValues": ["SUCCESS", "PENDING", "FAILED"]
    },
    "UpdateError": {
      "type": "object",
      "description": "The error associated with an update request.",
      "properties": [
        {
          "name": "ErrorCode",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ErrorCode"
          }
        },
        {
          "name": "ErrorMessage",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ErrorMessage"
          }
        }
      ]
    },
    "AirflowArn": {
      "type": "string",
      "description": "",
      "maxLength": 1224,
      "minLength": 1,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:airflow:[a-z0-9\\-]+:\\d{12}:environment/\\w+"
    },
    "EnvironmentArn": {
      "type": "string",
      "description": "ARN for the MWAA environment.",
      "maxLength": 1224,
      "minLength": 1,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:airflow:[a-z0-9\\-]+:\\d{12}:environment/\\w+"
    },
    "S3BucketArn": {
      "type": "string",
      "description": "ARN for the AWS S3 bucket to use as the source of DAGs and plugins for the environment.",
      "maxLength": 1224,
      "minLength": 1,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:s3:::[a-z0-9.\\-]+$"
    },
    "CreatedAt": {
      "type": "string",
      "description": "When the environment resource was created."
    },
    "UpdateCreatedAt": {
      "type": "string",
      "description": "When the update request was created."
    },
    "WebserverUrl": {
      "type": "string",
      "description": "Url endpoint for the environment's Airflow UI.",
      "maxLength": 256,
      "minLength": 1,
      "pattern": "^https://.+$"
    },
    "ExecutionRoleArn": {
      "type": "string",
      "description": "IAM role to be used by tasks.",
      "maxLength": 1224,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
    },
    "ServiceRoleArn": {
      "type": "string",
      "description": "IAM role to be used by MWAA to perform AWS API calls on behalf of the customer.",
      "maxLength": 1224,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
    },
    "KmsKey": {
      "type": "string",
      "description": "The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for MWAA data encryption.\n\n    You can specify the CMK using any of the following:\n\n    Key ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.\n\n    Key alias. For example, alias/ExampleAlias.\n\n    Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef.\n\n    Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.\n\n    AWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.",
      "maxLength": 1224,
      "pattern": "^(((arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\\d:\\d+:)?key\\/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|(arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):kms:[a-z]{2}-[a-z]+-\\d:\\d+:)?alias/.+)$"
    },
    "AirflowVersion": {
      "type": "string",
      "description": "Version of airflow to deploy to the environment.",
      "maxLength": 32,
      "pattern": "^[0-9a-z.]+$"
    },
    "RelativePath": {
      "type": "string",
      "description": "Represents an S3 prefix relative to the root of an S3 bucket.",
      "maxLength": 1024,
      "pattern": ".*"
    },
    "ConfigKey": {
      "type": "string",
      "description": "",
      "maxLength": 64,
      "pattern": "^[a-z]+([a-z._]*[a-z]+)?$"
    },
    "ConfigValue": {
      "type": "string",
      "description": "",
      "maxLength": 256,
      "pattern": ".*"
    },
    "SecurityGroupId": {
      "type": "string",
      "description": "",
      "maxLength": 1024,
      "minLength": 1,
      "pattern": "^sg-[a-zA-Z0-9\\-._]+$"
    },
    "SubnetId": {
      "type": "string",
      "description": "",
      "maxLength": 1024,
      "pattern": "^subnet-[a-zA-Z0-9\\-._]+$"
    },
    "CloudWatchLogGroupArn": {
      "type": "string",
      "description": "",
      "maxLength": 1224,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:logs:[a-z0-9\\-]+:\\d{12}:log-group:\\w+"
    },
    "LoggingEnabled": {
      "type": "boolean",
      "description": ""
    },
    "LoggingLevel": {
      "type": "string",
      "description": "",
      "allowedValues": ["CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG"]
    },
    "EnvironmentClass": {
      "type": "string",
      "description": "Templated configuration for airflow processes and backing infrastructure.",
      "maxLength": 1024,
      "minLength": 1
    },
    "MaxWorkers": {
      "type": "number",
      "description": "Maximum worker compute units.",
      "isInteger": true,
      "minimum": 1
    },
    "MinWorkers": {
      "type": "number",
      "description": "Minimum worker compute units.",
      "isInteger": true,
      "minimum": 1
    },
    "Schedulers": {
      "type": "number",
      "description": "Scheduler compute units.",
      "isInteger": true,
      "minimum": 1
    },
    "NetworkConfiguration": {
      "type": "object",
      "description": "Configures the network resources of the environment.",
      "properties": [
        {
          "name": "SubnetIds",
          "description": "A list of subnets to use for the environment. These must be private subnets, in the same VPC, in two different availability zones.",
          "optional": true,
          "type": {
            "type": "array",
            "description": "A list of subnets to use for the environment. These must be private subnets, in the same VPC, in two different availability zones.",
            "itemType": {
              "type": "ref",
              "typeName": "SubnetId"
            },
            "maxLength": 2,
            "minLength": 2
          }
        },
        {
          "name": "SecurityGroupIds",
          "description": "A list of security groups to use for the environment.",
          "optional": true,
          "type": {
            "type": "array",
            "description": "A list of security groups to use for the environment.",
            "itemType": {
              "type": "ref",
              "typeName": "SecurityGroupId"
            },
            "maxLength": 5,
            "minLength": 1
          }
        }
      ]
    },
    "LoggingConfiguration": {
      "type": "object",
      "description": "Logging configuration for the environment.",
      "properties": [
        {
          "name": "DagProcessingLogs",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ModuleLoggingConfiguration"
          }
        },
        {
          "name": "SchedulerLogs",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ModuleLoggingConfiguration"
          }
        },
        {
          "name": "WebserverLogs",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ModuleLoggingConfiguration"
          }
        },
        {
          "name": "WorkerLogs",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ModuleLoggingConfiguration"
          }
        },
        {
          "name": "TaskLogs",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ModuleLoggingConfiguration"
          }
        }
      ]
    },
    "LoggingConfigurationInput": {
      "type": "object",
      "description": "Configures logging for the environment.",
      "properties": [
        {
          "name": "DagProcessingLogs",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ModuleLoggingConfigurationInput"
          }
        },
        {
          "name": "SchedulerLogs",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ModuleLoggingConfigurationInput"
          }
        },
        {
          "name": "WebserverLogs",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ModuleLoggingConfigurationInput"
          }
        },
        {
          "name": "WorkerLogs",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ModuleLoggingConfigurationInput"
          }
        },
        {
          "name": "TaskLogs",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ModuleLoggingConfigurationInput"
          }
        }
      ]
    },
    "ModuleLoggingConfiguration": {
      "type": "object",
      "description": "Logging configuration for a specific airflow component.",
      "properties": [
        {
          "name": "Enabled",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "LoggingEnabled"
          }
        },
        {
          "name": "LogLevel",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "LoggingLevel"
          }
        },
        {
          "name": "CloudWatchLogGroupArn",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "CloudWatchLogGroupArn"
          }
        }
      ]
    },
    "ModuleLoggingConfigurationInput": {
      "type": "object",
      "description": "Configures airflow component logging for the environment.",
      "properties": [
        {
          "name": "Enabled",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "LoggingEnabled"
          }
        },
        {
          "name": "LogLevel",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "LoggingLevel"
          }
        }
      ]
    },
    "LastUpdate": {
      "type": "object",
      "description": "Details about the last update performed on the environment.",
      "properties": [
        {
          "name": "Status",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "UpdateStatus"
          }
        },
        {
          "name": "CreatedAt",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "UpdateCreatedAt"
          }
        },
        {
          "name": "Error",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "UpdateError"
          }
        }
      ]
    },
    "ErrorCode": {
      "type": "string",
      "description": "The error code associated with an error."
    },
    "ErrorMessage": {
      "type": "string",
      "description": "Error message describing a failed operation.",
      "maxLength": 1024,
      "minLength": 1,
      "pattern": "^.+$"
    },
    "S3ObjectVersion": {
      "type": "string",
      "description": "Represents an version ID for an S3 object.",
      "maxLength": 1024
    },
    "WeeklyMaintenanceWindowStart": {
      "type": "string",
      "description": "Start time for the weekly maintenance window.",
      "maxLength": 9,
      "pattern": "(MON|TUE|WED|THU|FRI|SAT|SUN):([01]\\d|2[0-3]):(00|30)"
    },
    "WebserverAccessMode": {
      "type": "string",
      "description": "Choice for mode of webserver access including over public internet or via private VPC endpoint.",
      "allowedValues": ["PRIVATE_ONLY", "PUBLIC_ONLY"]
    },
    "EndpointManagement": {
      "type": "string",
      "description": "Defines whether the VPC endpoints configured for the environment are created, and managed, by the customer or by Amazon MWAA.",
      "allowedValues": ["CUSTOMER", "SERVICE"]
    },
    "CeleryExecutorQueue": {
      "type": "string",
      "description": "The celery executor queue associated with the environment.",
      "maxLength": 1224
    },
    "DatabaseVpcEndpointService": {
      "type": "string",
      "description": "The database VPC endpoint service name.",
      "maxLength": 1224
    },
    "WebserverVpcEndpointService": {
      "type": "string",
      "description": "The webserver VPC endpoint service name, applicable if private webserver access mode selected.",
      "maxLength": 1224
    }
  },
  "resource": {
    "type": "object",
    "description": "Resource schema for AWS::MWAA::Environment",
    "properties": [
      {
        "name": "Name",
        "optional": false,
        "type": {
          "type": "ref",
          "typeName": "EnvironmentName"
        }
      },
      {
        "name": "ExecutionRoleArn",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "ExecutionRoleArn"
        }
      },
      {
        "name": "KmsKey",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "KmsKey"
        }
      },
      {
        "name": "AirflowVersion",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "AirflowVersion"
        }
      },
      {
        "name": "SourceBucketArn",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "S3BucketArn"
        }
      },
      {
        "name": "DagS3Path",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "RelativePath"
        }
      },
      {
        "name": "PluginsS3Path",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "RelativePath"
        }
      },
      {
        "name": "PluginsS3ObjectVersion",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "S3ObjectVersion"
        }
      },
      {
        "name": "RequirementsS3Path",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "RelativePath"
        }
      },
      {
        "name": "RequirementsS3ObjectVersion",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "S3ObjectVersion"
        }
      },
      {
        "name": "StartupScriptS3Path",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "RelativePath"
        }
      },
      {
        "name": "StartupScriptS3ObjectVersion",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "S3ObjectVersion"
        }
      },
      {
        "name": "AirflowConfigurationOptions",
        "description": "Key/value pairs representing Airflow configuration variables.\n    Keys are prefixed by their section:\n\n    [core]\n    dags_folder={AIRFLOW_HOME}/dags\n\n    Would be represented as\n\n    \"core.dags_folder\": \"{AIRFLOW_HOME}/dags\"",
        "optional": true,
        "type": {
          "type": "record",
          "description": "Key/value pairs representing Airflow configuration variables.\n    Keys are prefixed by their section:\n\n    [core]\n    dags_folder={AIRFLOW_HOME}/dags\n\n    Would be represented as\n\n    \"core.dags_folder\": \"{AIRFLOW_HOME}/dags\""
        }
      },
      {
        "name": "EnvironmentClass",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "EnvironmentClass"
        }
      },
      {
        "name": "MaxWorkers",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "MaxWorkers"
        }
      },
      {
        "name": "MinWorkers",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "MinWorkers"
        }
      },
      {
        "name": "Schedulers",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "Schedulers"
        }
      },
      {
        "name": "NetworkConfiguration",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "NetworkConfiguration"
        }
      },
      {
        "name": "LoggingConfiguration",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "LoggingConfiguration"
        }
      },
      {
        "name": "WeeklyMaintenanceWindowStart",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "WeeklyMaintenanceWindowStart"
        }
      },
      {
        "name": "Tags",
        "description": "A map of tags for the environment.",
        "optional": true,
        "type": {
          "type": "record",
          "description": "A map of tags for the environment."
        }
      },
      {
        "name": "WebserverAccessMode",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "WebserverAccessMode"
        }
      },
      {
        "name": "EndpointManagement",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "EndpointManagement"
        }
      }
    ]
  },
  "attributes": {
    "type": "object",
    "description": "Resource schema for AWS::MWAA::Environment",
    "properties": [
      {
        "name": "Arn",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "EnvironmentArn"
        }
      },
      {
        "name": "WebserverUrl",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "WebserverUrl"
        }
      },
      {
        "name": "CeleryExecutorQueue",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "CeleryExecutorQueue"
        }
      },
      {
        "name": "DatabaseVpcEndpointService",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "DatabaseVpcEndpointService"
        }
      },
      {
        "name": "WebserverVpcEndpointService",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "WebserverVpcEndpointService"
        }
      }
    ]
  },
  "$hash": "98735989dc470005ac2cd11d056f4c6e3f54eb9a"
}
