{
  "definitions": {
    "CreatedAt": {
      "type": "object",
      "description": "The time that a Data Store was created.",
      "properties": [
        {
          "name": "Nanos",
          "description": "Nanoseconds.",
          "optional": false,
          "type": {
            "type": "number",
            "description": "Nanoseconds.",
            "isInteger": true
          }
        },
        {
          "name": "Seconds",
          "description": "Seconds since epoch.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "Seconds since epoch."
          }
        }
      ]
    },
    "DatastoreArn": {
      "type": "string",
      "description": "The Amazon Resource Name used in the creation of the Data Store.",
      "pattern": "^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?"
    },
    "DatastoreEndpoint": {
      "type": "string",
      "description": "The AWS endpoint for the Data Store. Each Data Store will have it's own endpoint with Data Store ID in the endpoint URL.",
      "maxLength": 10000
    },
    "DatastoreId": {
      "type": "string",
      "description": "The AWS-generated ID number for the Data Store.",
      "maxLength": 32,
      "minLength": 1
    },
    "DatastoreName": {
      "type": "string",
      "description": "The user-generated name for the Data Store.",
      "maxLength": 256,
      "minLength": 1
    },
    "DatastoreStatus": {
      "type": "string",
      "description": "The status of the Data Store. Possible statuses are 'CREATING', 'ACTIVE', 'DELETING', or 'DELETED'.",
      "allowedValues": ["CREATING", "ACTIVE", "DELETING", "DELETED"]
    },
    "DatastoreTypeVersion": {
      "type": "string",
      "description": "The FHIR version. Only R4 version data is supported.",
      "allowedValues": ["R4"]
    },
    "IdentityProviderConfiguration": {
      "type": "object",
      "description": "The identity provider configuration for the datastore",
      "properties": [
        {
          "name": "AuthorizationStrategy",
          "description": "Type of Authorization Strategy. The two types of supported Authorization strategies are SMART_ON_FHIR_V1 and AWS_AUTH.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "Type of Authorization Strategy. The two types of supported Authorization strategies are SMART_ON_FHIR_V1 and AWS_AUTH.",
            "allowedValues": ["SMART_ON_FHIR_V1", "AWS_AUTH"]
          }
        },
        {
          "name": "FineGrainedAuthorizationEnabled",
          "description": "Flag to indicate if fine-grained authorization will be enabled for the datastore",
          "optional": true,
          "type": {
            "type": "boolean",
            "description": "Flag to indicate if fine-grained authorization will be enabled for the datastore"
          }
        },
        {
          "name": "IdpLambdaArn",
          "description": "The Amazon Resource Name (ARN) of the Lambda function that will be used to decode the access token created by the authorization server.",
          "optional": true,
          "type": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of the Lambda function that will be used to decode the access token created by the authorization server.",
            "maxLength": 256,
            "minLength": 49,
            "pattern": "arn:aws[-a-z]*:lambda:[a-z]{2}-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9\\-_\\.]+(:(\\$LATEST|[a-zA-Z0-9\\-_]+))?"
          }
        },
        {
          "name": "Metadata",
          "description": "The JSON metadata elements for identity provider configuration.",
          "optional": true,
          "type": {
            "type": "string",
            "description": "The JSON metadata elements for identity provider configuration."
          }
        }
      ]
    },
    "KmsEncryptionConfig": {
      "type": "object",
      "description": "The customer-managed-key (CMK) used when creating a Data Store. If a customer owned key is not specified, an AWS owned key will be used for encryption.",
      "properties": [
        {
          "name": "CmkType",
          "description": "The type of customer-managed-key (CMK) used for encryption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "The type of customer-managed-key (CMK) used for encryption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs.",
            "allowedValues": ["CUSTOMER_MANAGED_KMS_KEY", "AWS_OWNED_KMS_KEY"]
          }
        },
        {
          "name": "KmsKeyId",
          "description": "The KMS encryption key id/alias used to encrypt the Data Store contents at rest.",
          "optional": true,
          "type": {
            "type": "string",
            "description": "The KMS encryption key id/alias used to encrypt the Data Store contents at rest.",
            "maxLength": 400,
            "minLength": 1,
            "pattern": "(arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:kms:)?([a-z]{2}-[a-z]+(-[a-z]+)?-\\d:)?(\\d{12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))"
          }
        }
      ]
    },
    "PreloadDataConfig": {
      "type": "object",
      "description": "The preloaded data configuration for the Data Store. Only data preloaded from Synthea is supported.",
      "properties": [
        {
          "name": "PreloadDataType",
          "description": "The type of preloaded data. Only Synthea preloaded data is supported.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "The type of preloaded data. Only Synthea preloaded data is supported.",
            "allowedValues": ["SYNTHEA"]
          }
        }
      ]
    },
    "SseConfiguration": {
      "type": "object",
      "description": "The server-side encryption key configuration for a customer provided encryption key.",
      "properties": [
        {
          "name": "KmsEncryptionConfig",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "KmsEncryptionConfig"
          }
        }
      ]
    },
    "Tag": {
      "type": "object",
      "description": "A key-value pair. A tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty (null) strings.",
      "properties": [
        {
          "name": "Key",
          "description": "The key of the tag.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "The key of the tag.",
            "maxLength": 128,
            "minLength": 1
          }
        },
        {
          "name": "Value",
          "description": "The value of the tag.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "The value of the tag.",
            "maxLength": 256,
            "minLength": 0
          }
        }
      ]
    }
  },
  "resource": {
    "type": "object",
    "description": "HealthLake FHIR Datastore",
    "documentationUrl": "https://docs.aws.amazon.com/healthlake/latest/devguide/working-with-FHIR-healthlake.html",
    "properties": [
      {
        "name": "DatastoreName",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "DatastoreName"
        }
      },
      {
        "name": "DatastoreTypeVersion",
        "optional": false,
        "type": {
          "type": "ref",
          "typeName": "DatastoreTypeVersion"
        }
      },
      {
        "name": "IdentityProviderConfiguration",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "IdentityProviderConfiguration"
        }
      },
      {
        "name": "PreloadDataConfig",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "PreloadDataConfig"
        }
      },
      {
        "name": "SseConfiguration",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "SseConfiguration"
        }
      },
      {
        "name": "Tags",
        "optional": true,
        "type": {
          "type": "array",
          "itemType": {
            "type": "ref",
            "typeName": "Tag"
          }
        }
      }
    ]
  },
  "attributes": {
    "type": "object",
    "description": "HealthLake FHIR Datastore",
    "documentationUrl": "https://docs.aws.amazon.com/healthlake/latest/devguide/working-with-FHIR-healthlake.html",
    "properties": [
      {
        "name": "CreatedAt",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "CreatedAt"
        }
      },
      {
        "name": "DatastoreArn",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "DatastoreArn"
        }
      },
      {
        "name": "DatastoreEndpoint",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "DatastoreEndpoint"
        }
      },
      {
        "name": "DatastoreId",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "DatastoreId"
        }
      },
      {
        "name": "DatastoreStatus",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "DatastoreStatus"
        }
      }
    ]
  },
  "$hash": "ac7597a7eaa471d84a47f06683c1334858933090"
}
