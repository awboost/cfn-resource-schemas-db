{
  "definitions": {
    "AndStatement": {
      "type": "object",
      "properties": [
        {
          "name": "Statements",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "Statement"
            }
          }
        }
      ]
    },
    "Body": {
      "type": "object",
      "description": "The body of a web request. This immediately follows the request headers.",
      "properties": [
        {
          "name": "OversizeHandling",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "OversizeHandling"
          }
        }
      ]
    },
    "ByteMatchStatement": {
      "type": "object",
      "description": "Byte Match statement.",
      "properties": [
        {
          "name": "SearchString",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "SearchString"
          }
        },
        {
          "name": "SearchStringBase64",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "SearchStringBase64"
          }
        },
        {
          "name": "FieldToMatch",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "FieldToMatch"
          }
        },
        {
          "name": "TextTransformations",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "TextTransformation"
            }
          }
        },
        {
          "name": "PositionalConstraint",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "PositionalConstraint"
          }
        }
      ]
    },
    "DefaultAction": {
      "type": "object",
      "description": "Default Action WebACL will take against ingress traffic when there is no matching Rule.",
      "properties": [
        {
          "name": "Allow",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "AllowAction"
          }
        },
        {
          "name": "Block",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "BlockAction"
          }
        }
      ]
    },
    "EntityDescription": {
      "type": "string",
      "description": "Description of the entity.",
      "pattern": "^[a-zA-Z0-9=:#@/\\-,.][a-zA-Z0-9+=:#@/\\-,.\\s]+[a-zA-Z0-9+=:#@/\\-,.]{1,256}$"
    },
    "EntityName": {
      "type": "string",
      "description": "Name of the WebACL.",
      "pattern": "^[0-9A-Za-z_-]{1,128}$"
    },
    "ExcludedRule": {
      "type": "object",
      "description": "Excluded Rule in the RuleGroup or ManagedRuleGroup will not be evaluated.",
      "properties": [
        {
          "name": "Name",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "EntityName"
          }
        }
      ]
    },
    "RuleActionOverride": {
      "type": "object",
      "description": "Action override for rules in the rule group.",
      "properties": [
        {
          "name": "Name",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "EntityName"
          }
        },
        {
          "name": "ActionToUse",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "RuleAction"
          }
        }
      ]
    },
    "ExcludedRules": {
      "type": "array",
      "itemType": {
        "type": "ref",
        "typeName": "ExcludedRule"
      }
    },
    "FieldToMatch": {
      "type": "object",
      "description": "Field of the request to match.",
      "properties": [
        {
          "name": "SingleHeader",
          "optional": true,
          "type": {
            "type": "object",
            "properties": [
              {
                "name": "Name",
                "optional": false,
                "type": {
                  "type": "string"
                }
              }
            ]
          }
        },
        {
          "name": "SingleQueryArgument",
          "description": "One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.",
          "optional": true,
          "type": {
            "type": "object",
            "description": "One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.",
            "properties": [
              {
                "name": "Name",
                "optional": false,
                "type": {
                  "type": "string"
                }
              }
            ]
          }
        },
        {
          "name": "AllQueryArguments",
          "description": "All query arguments of a web request.",
          "optional": true,
          "type": {
            "type": "record",
            "description": "All query arguments of a web request."
          }
        },
        {
          "name": "UriPath",
          "description": "The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.",
          "optional": true,
          "type": {
            "type": "record",
            "description": "The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg."
          }
        },
        {
          "name": "QueryString",
          "description": "The query string of a web request. This is the part of a URL that appears after a ? character, if any.",
          "optional": true,
          "type": {
            "type": "record",
            "description": "The query string of a web request. This is the part of a URL that appears after a ? character, if any."
          }
        },
        {
          "name": "Body",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "Body"
          }
        },
        {
          "name": "Method",
          "description": "The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.",
          "optional": true,
          "type": {
            "type": "record",
            "description": "The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform."
          }
        },
        {
          "name": "JsonBody",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "JsonBody"
          }
        },
        {
          "name": "Headers",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "Headers"
          }
        },
        {
          "name": "Cookies",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "Cookies"
          }
        }
      ]
    },
    "JsonBody": {
      "type": "object",
      "description": "Inspect the request body as JSON. The request body immediately follows the request headers.",
      "properties": [
        {
          "name": "MatchPattern",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "JsonMatchPattern"
          }
        },
        {
          "name": "MatchScope",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "JsonMatchScope"
          }
        },
        {
          "name": "InvalidFallbackBehavior",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "BodyParsingFallbackBehavior"
          }
        },
        {
          "name": "OversizeHandling",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "OversizeHandling"
          }
        }
      ]
    },
    "BodyParsingFallbackBehavior": {
      "type": "string",
      "description": "The inspection behavior to fall back to if the JSON in the request body is invalid.",
      "allowedValues": ["MATCH", "NO_MATCH", "EVALUATE_AS_STRING"]
    },
    "JsonMatchScope": {
      "type": "string",
      "description": "The parts of the JSON to match against using the MatchPattern.",
      "allowedValues": ["ALL", "KEY", "VALUE"]
    },
    "JsonMatchPattern": {
      "type": "object",
      "description": "The pattern to look for in the JSON body.",
      "properties": [
        {
          "name": "All",
          "description": "Inspect all parts of the web request's JSON body.",
          "optional": true,
          "type": {
            "type": "record",
            "description": "Inspect all parts of the web request's JSON body."
          }
        },
        {
          "name": "IncludedPaths",
          "optional": true,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "JsonPointerPath"
            }
          }
        }
      ]
    },
    "JsonPointerPath": {
      "type": "string",
      "description": "JSON pointer path in the web request's JSON body",
      "pattern": "^[\\/]+([^~]*(~[01])*)*{1,512}$"
    },
    "GeoMatchStatement": {
      "type": "object",
      "properties": [
        {
          "name": "CountryCodes",
          "optional": true,
          "type": {
            "type": "array",
            "itemType": {
              "type": "string",
              "maxLength": 2,
              "minLength": 1
            }
          }
        },
        {
          "name": "ForwardedIPConfig",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ForwardedIPConfiguration"
          }
        }
      ]
    },
    "EntityId": {
      "type": "string",
      "description": "Id of the WebACL",
      "pattern": "^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$"
    },
    "IPSetReferenceStatement": {
      "type": "object",
      "properties": [
        {
          "name": "Arn",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "ResourceArn"
          }
        },
        {
          "name": "IPSetForwardedIPConfig",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "IPSetForwardedIPConfiguration"
          }
        }
      ]
    },
    "ManagedRuleGroupStatement": {
      "type": "object",
      "properties": [
        {
          "name": "Name",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "EntityName"
          }
        },
        {
          "name": "VendorName",
          "optional": false,
          "type": {
            "type": "string"
          }
        },
        {
          "name": "Version",
          "optional": true,
          "type": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[\\w#:\\.\\-/]+$"
          }
        },
        {
          "name": "ExcludedRules",
          "optional": true,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "ExcludedRule"
            }
          }
        },
        {
          "name": "ScopeDownStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "Statement"
          }
        },
        {
          "name": "ManagedRuleGroupConfigs",
          "description": "Collection of ManagedRuleGroupConfig.",
          "optional": true,
          "type": {
            "type": "array",
            "description": "Collection of ManagedRuleGroupConfig.",
            "itemType": {
              "type": "ref",
              "typeName": "ManagedRuleGroupConfig"
            }
          }
        },
        {
          "name": "RuleActionOverrides",
          "description": "Action overrides for rules in the rule group.",
          "optional": true,
          "type": {
            "type": "array",
            "description": "Action overrides for rules in the rule group.",
            "itemType": {
              "type": "ref",
              "typeName": "RuleActionOverride"
            },
            "maxLength": 100
          }
        }
      ]
    },
    "NotStatement": {
      "type": "object",
      "properties": [
        {
          "name": "Statement",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "Statement"
          }
        }
      ]
    },
    "OrStatement": {
      "type": "object",
      "properties": [
        {
          "name": "Statements",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "Statement"
            }
          }
        }
      ]
    },
    "OverrideAction": {
      "type": "object",
      "description": "Override a RuleGroup or ManagedRuleGroup behavior. This can only be applied to Rule that has RuleGroupReferenceStatement or ManagedRuleGroupReferenceStatement.",
      "properties": [
        {
          "name": "Count",
          "description": "Count traffic towards application.",
          "optional": true,
          "type": {
            "type": "record",
            "description": "Count traffic towards application."
          }
        },
        {
          "name": "None",
          "description": "Keep the RuleGroup or ManagedRuleGroup behavior as is.",
          "optional": true,
          "type": {
            "type": "record",
            "description": "Keep the RuleGroup or ManagedRuleGroup behavior as is."
          }
        }
      ]
    },
    "PositionalConstraint": {
      "type": "string",
      "description": "Position of the evaluation in the FieldToMatch of request.",
      "allowedValues": [
        "EXACTLY",
        "STARTS_WITH",
        "ENDS_WITH",
        "CONTAINS",
        "CONTAINS_WORD"
      ]
    },
    "QueryString": {
      "type": "record"
    },
    "RateBasedStatement": {
      "type": "object",
      "properties": [
        {
          "name": "Limit",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "RateLimit"
          }
        },
        {
          "name": "AggregateKeyType",
          "optional": false,
          "type": {
            "type": "string",
            "allowedValues": ["CONSTANT", "IP", "FORWARDED_IP", "CUSTOM_KEYS"]
          }
        },
        {
          "name": "CustomKeys",
          "description": "Specifies the aggregate keys to use in a rate-base rule.",
          "optional": true,
          "type": {
            "type": "array",
            "description": "Specifies the aggregate keys to use in a rate-base rule.",
            "itemType": {
              "type": "ref",
              "typeName": "RateBasedStatementCustomKey"
            },
            "maxLength": 5
          }
        },
        {
          "name": "ScopeDownStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "Statement"
          }
        },
        {
          "name": "ForwardedIPConfig",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ForwardedIPConfiguration"
          }
        }
      ]
    },
    "RateBasedStatementCustomKey": {
      "type": "object",
      "description": "Specifies a single custom aggregate key for a rate-base rule.",
      "properties": [
        {
          "name": "Cookie",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RateLimitCookie"
          }
        },
        {
          "name": "ForwardedIP",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RateLimitForwardedIP"
          }
        },
        {
          "name": "Header",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RateLimitHeader"
          }
        },
        {
          "name": "HTTPMethod",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RateLimitHTTPMethod"
          }
        },
        {
          "name": "IP",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RateLimitIP"
          }
        },
        {
          "name": "LabelNamespace",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RateLimitLabelNamespace"
          }
        },
        {
          "name": "QueryArgument",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RateLimitQueryArgument"
          }
        },
        {
          "name": "QueryString",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RateLimitQueryString"
          }
        },
        {
          "name": "UriPath",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RateLimitUriPath"
          }
        }
      ]
    },
    "RateLimitCookie": {
      "type": "object",
      "description": "Specifies a cookie as an aggregate key for a rate-based rule.",
      "properties": [
        {
          "name": "Name",
          "description": "The name of the cookie to use.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "The name of the cookie to use.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": ".*\\S.*"
          }
        },
        {
          "name": "TextTransformations",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "TextTransformation"
            }
          }
        }
      ]
    },
    "RateLimitForwardedIP": {
      "type": "record",
      "description": "Specifies the first IP address in an HTTP header as an aggregate key for a rate-based rule."
    },
    "RateLimitHeader": {
      "type": "object",
      "description": "Specifies a header as an aggregate key for a rate-based rule.",
      "properties": [
        {
          "name": "Name",
          "description": "The name of the header to use.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "The name of the header to use.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": ".*\\S.*"
          }
        },
        {
          "name": "TextTransformations",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "TextTransformation"
            }
          }
        }
      ]
    },
    "RateLimitHTTPMethod": {
      "type": "record",
      "description": "Specifies the request's HTTP method as an aggregate key for a rate-based rule."
    },
    "RateLimitIP": {
      "type": "record",
      "description": "Specifies the IP address in the web request as an aggregate key for a rate-based rule."
    },
    "RateLimitLabelNamespace": {
      "type": "object",
      "description": "Specifies a label namespace to use as an aggregate key for a rate-based rule.",
      "properties": [
        {
          "name": "Namespace",
          "description": "The namespace to use for aggregation.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "The namespace to use for aggregation.",
            "pattern": "^[0-9A-Za-z_:-]{1,1024}$"
          }
        }
      ]
    },
    "RateLimitQueryArgument": {
      "type": "object",
      "description": "Specifies a query argument in the request as an aggregate key for a rate-based rule.",
      "properties": [
        {
          "name": "Name",
          "description": "The name of the query argument to use.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "The name of the query argument to use.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": ".*\\S.*"
          }
        },
        {
          "name": "TextTransformations",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "TextTransformation"
            }
          }
        }
      ]
    },
    "RateLimitQueryString": {
      "type": "object",
      "description": "Specifies the request's query string as an aggregate key for a rate-based rule.",
      "properties": [
        {
          "name": "TextTransformations",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "TextTransformation"
            }
          }
        }
      ]
    },
    "RateLimitUriPath": {
      "type": "object",
      "description": "Specifies the request's URI Path as an aggregate key for a rate-based rule.",
      "properties": [
        {
          "name": "TextTransformations",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "TextTransformation"
            }
          }
        }
      ]
    },
    "RateLimit": {
      "type": "number",
      "isInteger": true,
      "maximum": 2000000000,
      "minimum": 100
    },
    "RegexPatternSetReferenceStatement": {
      "type": "object",
      "properties": [
        {
          "name": "Arn",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "ResourceArn"
          }
        },
        {
          "name": "FieldToMatch",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "FieldToMatch"
          }
        },
        {
          "name": "TextTransformations",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "TextTransformation"
            }
          }
        }
      ]
    },
    "ResourceArn": {
      "type": "string",
      "description": "ARN of the WAF entity.",
      "maxLength": 2048,
      "minLength": 20
    },
    "ForwardedIPConfiguration": {
      "type": "object",
      "properties": [
        {
          "name": "HeaderName",
          "optional": false,
          "type": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]+{1,255}$"
          }
        },
        {
          "name": "FallbackBehavior",
          "optional": false,
          "type": {
            "type": "string",
            "allowedValues": ["MATCH", "NO_MATCH"]
          }
        }
      ]
    },
    "IPSetForwardedIPConfiguration": {
      "type": "object",
      "properties": [
        {
          "name": "HeaderName",
          "optional": false,
          "type": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]+{1,255}$"
          }
        },
        {
          "name": "FallbackBehavior",
          "optional": false,
          "type": {
            "type": "string",
            "allowedValues": ["MATCH", "NO_MATCH"]
          }
        },
        {
          "name": "Position",
          "optional": false,
          "type": {
            "type": "string",
            "allowedValues": ["FIRST", "LAST", "ANY"]
          }
        }
      ]
    },
    "Rule": {
      "type": "object",
      "description": "Rule of WebACL that contains condition and action.",
      "properties": [
        {
          "name": "Name",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "EntityName"
          }
        },
        {
          "name": "Priority",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "RulePriority"
          }
        },
        {
          "name": "Statement",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "Statement"
          }
        },
        {
          "name": "Action",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RuleAction"
          }
        },
        {
          "name": "OverrideAction",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "OverrideAction"
          }
        },
        {
          "name": "RuleLabels",
          "description": "Collection of Rule Labels.",
          "optional": true,
          "type": {
            "type": "array",
            "description": "Collection of Rule Labels.",
            "itemType": {
              "type": "ref",
              "typeName": "Label"
            }
          }
        },
        {
          "name": "VisibilityConfig",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "VisibilityConfig"
          }
        },
        {
          "name": "CaptchaConfig",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "CaptchaConfig"
          }
        },
        {
          "name": "ChallengeConfig",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ChallengeConfig"
          }
        }
      ]
    },
    "Rules": {
      "type": "array",
      "description": "Collection of Rules.",
      "itemType": {
        "type": "ref",
        "typeName": "Rule"
      }
    },
    "RuleAction": {
      "type": "object",
      "description": "Action taken when Rule matches its condition.",
      "properties": [
        {
          "name": "Allow",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "AllowAction"
          }
        },
        {
          "name": "Block",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "BlockAction"
          }
        },
        {
          "name": "Count",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "CountAction"
          }
        },
        {
          "name": "Captcha",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "CaptchaAction"
          }
        },
        {
          "name": "Challenge",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ChallengeAction"
          }
        }
      ]
    },
    "AllowAction": {
      "type": "object",
      "description": "Allow traffic towards application.",
      "properties": [
        {
          "name": "CustomRequestHandling",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "CustomRequestHandling"
          }
        }
      ]
    },
    "CountAction": {
      "type": "object",
      "description": "Allow traffic towards application.",
      "properties": [
        {
          "name": "CustomRequestHandling",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "CustomRequestHandling"
          }
        }
      ]
    },
    "CaptchaAction": {
      "type": "object",
      "description": "Checks valid token exists with request.",
      "properties": [
        {
          "name": "CustomRequestHandling",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "CustomRequestHandling"
          }
        }
      ]
    },
    "ChallengeAction": {
      "type": "object",
      "description": "Checks that the request has a valid token with an unexpired challenge timestamp and, if not, returns a browser challenge to the client.",
      "properties": [
        {
          "name": "CustomRequestHandling",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "CustomRequestHandling"
          }
        }
      ]
    },
    "BlockAction": {
      "type": "object",
      "description": "Block traffic towards application.",
      "properties": [
        {
          "name": "CustomResponse",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "CustomResponse"
          }
        }
      ]
    },
    "CustomHTTPHeaderName": {
      "type": "string",
      "description": "HTTP header name.",
      "maxLength": 64,
      "minLength": 1
    },
    "CustomHTTPHeaderValue": {
      "type": "string",
      "description": "HTTP header value.",
      "maxLength": 255,
      "minLength": 1
    },
    "CustomHTTPHeader": {
      "type": "object",
      "description": "HTTP header.",
      "properties": [
        {
          "name": "Name",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "CustomHTTPHeaderName"
          }
        },
        {
          "name": "Value",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "CustomHTTPHeaderValue"
          }
        }
      ]
    },
    "CustomRequestHandling": {
      "type": "object",
      "description": "Custom request handling.",
      "properties": [
        {
          "name": "InsertHeaders",
          "description": "Collection of HTTP headers.",
          "optional": false,
          "type": {
            "type": "array",
            "description": "Collection of HTTP headers.",
            "itemType": {
              "type": "ref",
              "typeName": "CustomHTTPHeader"
            },
            "minLength": 1
          }
        }
      ]
    },
    "ResponseStatusCode": {
      "type": "number",
      "description": "Custom response code.",
      "isInteger": true,
      "maximum": 599,
      "minimum": 200
    },
    "ResponseContentType": {
      "type": "string",
      "description": "Valid values are TEXT_PLAIN, TEXT_HTML, and APPLICATION_JSON.",
      "allowedValues": ["TEXT_PLAIN", "TEXT_HTML", "APPLICATION_JSON"]
    },
    "ResponseContent": {
      "type": "string",
      "description": "Response content.",
      "maxLength": 10240,
      "minLength": 1
    },
    "CustomResponseBody": {
      "type": "object",
      "description": "Custom response body.",
      "properties": [
        {
          "name": "ContentType",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "ResponseContentType"
          }
        },
        {
          "name": "Content",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "ResponseContent"
          }
        }
      ]
    },
    "CustomResponse": {
      "type": "object",
      "description": "Custom response.",
      "properties": [
        {
          "name": "ResponseCode",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "ResponseStatusCode"
          }
        },
        {
          "name": "CustomResponseBodyKey",
          "description": "Custom response body key.",
          "optional": true,
          "type": {
            "type": "string",
            "description": "Custom response body key.",
            "pattern": "^[\\w\\-]+$"
          }
        },
        {
          "name": "ResponseHeaders",
          "description": "Collection of HTTP headers.",
          "optional": true,
          "type": {
            "type": "array",
            "description": "Collection of HTTP headers.",
            "itemType": {
              "type": "ref",
              "typeName": "CustomHTTPHeader"
            },
            "minLength": 1
          }
        }
      ]
    },
    "CustomResponseBodies": {
      "type": "record",
      "description": "Custom response key and body map.",
      "valueType": {
        "type": "ref",
        "typeName": "CustomResponseBody"
      }
    },
    "RuleGroupReferenceStatement": {
      "type": "object",
      "properties": [
        {
          "name": "Arn",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "ResourceArn"
          }
        },
        {
          "name": "ExcludedRules",
          "optional": true,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "ExcludedRule"
            }
          }
        },
        {
          "name": "RuleActionOverrides",
          "description": "Action overrides for rules in the rule group.",
          "optional": true,
          "type": {
            "type": "array",
            "description": "Action overrides for rules in the rule group.",
            "itemType": {
              "type": "ref",
              "typeName": "RuleActionOverride"
            },
            "maxLength": 100
          }
        }
      ]
    },
    "RulePriority": {
      "type": "number",
      "description": "Priority of the Rule, Rules get evaluated from lower to higher priority.",
      "isInteger": true,
      "minimum": 0
    },
    "Scope": {
      "type": "string",
      "description": "Use CLOUDFRONT for CloudFront WebACL, use REGIONAL for Application Load Balancer and API Gateway.",
      "allowedValues": ["CLOUDFRONT", "REGIONAL"]
    },
    "SearchString": {
      "type": "string",
      "description": "String that is searched to find a match."
    },
    "SearchStringBase64": {
      "type": "string",
      "description": "Base64 encoded string that is searched to find a match."
    },
    "SingleHeader": {
      "type": "object",
      "properties": [
        {
          "name": "Name",
          "optional": true,
          "type": {
            "type": "string"
          }
        }
      ]
    },
    "SingleQueryArgument": {
      "type": "object",
      "properties": [
        {
          "name": "Name",
          "optional": true,
          "type": {
            "type": "string"
          }
        }
      ]
    },
    "SizeConstraintStatement": {
      "type": "object",
      "description": "Size Constraint statement.",
      "properties": [
        {
          "name": "FieldToMatch",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "FieldToMatch"
          }
        },
        {
          "name": "ComparisonOperator",
          "optional": false,
          "type": {
            "type": "string",
            "allowedValues": ["EQ", "NE", "LE", "LT", "GE", "GT"]
          }
        },
        {
          "name": "Size",
          "optional": false,
          "type": {
            "type": "number",
            "isInteger": false,
            "maximum": 21474836480,
            "minimum": 0
          }
        },
        {
          "name": "TextTransformations",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "TextTransformation"
            }
          }
        }
      ]
    },
    "SqliMatchStatement": {
      "type": "object",
      "description": "Sqli Match Statement.",
      "properties": [
        {
          "name": "FieldToMatch",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "FieldToMatch"
          }
        },
        {
          "name": "TextTransformations",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "TextTransformation"
            }
          }
        },
        {
          "name": "SensitivityLevel",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "SensitivityLevel"
          }
        }
      ]
    },
    "Statement": {
      "type": "object",
      "description": "First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc",
      "properties": [
        {
          "name": "ByteMatchStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ByteMatchStatement"
          }
        },
        {
          "name": "SqliMatchStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "SqliMatchStatement"
          }
        },
        {
          "name": "XssMatchStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "XssMatchStatement"
          }
        },
        {
          "name": "SizeConstraintStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "SizeConstraintStatement"
          }
        },
        {
          "name": "GeoMatchStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "GeoMatchStatement"
          }
        },
        {
          "name": "RuleGroupReferenceStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RuleGroupReferenceStatement"
          }
        },
        {
          "name": "IPSetReferenceStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "IPSetReferenceStatement"
          }
        },
        {
          "name": "RegexPatternSetReferenceStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RegexPatternSetReferenceStatement"
          }
        },
        {
          "name": "ManagedRuleGroupStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ManagedRuleGroupStatement"
          }
        },
        {
          "name": "RateBasedStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RateBasedStatement"
          }
        },
        {
          "name": "AndStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "AndStatement"
          }
        },
        {
          "name": "OrStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "OrStatement"
          }
        },
        {
          "name": "NotStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "NotStatement"
          }
        },
        {
          "name": "LabelMatchStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "LabelMatchStatement"
          }
        },
        {
          "name": "RegexMatchStatement",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RegexMatchStatement"
          }
        }
      ]
    },
    "Tag": {
      "type": "object",
      "properties": [
        {
          "name": "Key",
          "optional": true,
          "type": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          }
        },
        {
          "name": "Value",
          "optional": true,
          "type": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          }
        }
      ]
    },
    "TextTransformation": {
      "type": "object",
      "description": "Text Transformation on the Search String before match.",
      "properties": [
        {
          "name": "Priority",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "TextTransformationPriority"
          }
        },
        {
          "name": "Type",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "TextTransformationType"
          }
        }
      ]
    },
    "TextTransformationPriority": {
      "type": "number",
      "description": "Priority of Rule being evaluated.",
      "isInteger": true,
      "minimum": 0
    },
    "TextTransformationType": {
      "type": "string",
      "description": "Type of text transformation.",
      "allowedValues": [
        "NONE",
        "COMPRESS_WHITE_SPACE",
        "HTML_ENTITY_DECODE",
        "LOWERCASE",
        "CMD_LINE",
        "URL_DECODE",
        "BASE64_DECODE",
        "HEX_DECODE",
        "MD5",
        "REPLACE_COMMENTS",
        "ESCAPE_SEQ_DECODE",
        "SQL_HEX_DECODE",
        "CSS_DECODE",
        "JS_DECODE",
        "NORMALIZE_PATH",
        "NORMALIZE_PATH_WIN",
        "REMOVE_NULLS",
        "REPLACE_NULLS",
        "BASE64_DECODE_EXT",
        "URL_DECODE_UNI",
        "UTF8_TO_UNICODE"
      ]
    },
    "UriPath": {
      "type": "record"
    },
    "VisibilityConfig": {
      "type": "object",
      "description": "Visibility Metric of the WebACL.",
      "properties": [
        {
          "name": "SampledRequestsEnabled",
          "optional": false,
          "type": {
            "type": "boolean"
          }
        },
        {
          "name": "CloudWatchMetricsEnabled",
          "optional": false,
          "type": {
            "type": "boolean"
          }
        },
        {
          "name": "MetricName",
          "optional": false,
          "type": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          }
        }
      ]
    },
    "XssMatchStatement": {
      "type": "object",
      "description": "Xss Match Statement.",
      "properties": [
        {
          "name": "FieldToMatch",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "FieldToMatch"
          }
        },
        {
          "name": "TextTransformations",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "TextTransformation"
            }
          }
        }
      ]
    },
    "LabelName": {
      "type": "string",
      "description": "Name of the Label.",
      "pattern": "^[0-9A-Za-z_:-]{1,1024}$"
    },
    "Label": {
      "type": "object",
      "properties": [
        {
          "name": "Name",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "LabelName"
          }
        }
      ]
    },
    "LabelMatchKey": {
      "type": "string",
      "pattern": "^[0-9A-Za-z_:-]{1,1024}$"
    },
    "LabelMatchScope": {
      "type": "string",
      "allowedValues": ["LABEL", "NAMESPACE"]
    },
    "LabelMatchStatement": {
      "type": "object",
      "properties": [
        {
          "name": "Scope",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "LabelMatchScope"
          }
        },
        {
          "name": "Key",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "LabelMatchKey"
          }
        }
      ]
    },
    "RegexMatchStatement": {
      "type": "object",
      "properties": [
        {
          "name": "RegexString",
          "optional": false,
          "type": {
            "type": "string",
            "maxLength": 512,
            "minLength": 1
          }
        },
        {
          "name": "FieldToMatch",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "FieldToMatch"
          }
        },
        {
          "name": "TextTransformations",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "TextTransformation"
            }
          }
        }
      ]
    },
    "CaptchaConfig": {
      "type": "object",
      "properties": [
        {
          "name": "ImmunityTimeProperty",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ImmunityTimeProperty"
          }
        }
      ]
    },
    "ChallengeConfig": {
      "type": "object",
      "properties": [
        {
          "name": "ImmunityTimeProperty",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ImmunityTimeProperty"
          }
        }
      ]
    },
    "ImmunityTimeProperty": {
      "type": "object",
      "properties": [
        {
          "name": "ImmunityTime",
          "optional": false,
          "type": {
            "type": "number",
            "isInteger": true,
            "maximum": 259200,
            "minimum": 60
          }
        }
      ]
    },
    "ManagedRuleGroupConfig": {
      "type": "object",
      "description": "ManagedRuleGroupConfig.",
      "properties": [
        {
          "name": "LoginPath",
          "optional": true,
          "type": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "pattern": ".*\\S.*"
          }
        },
        {
          "name": "PayloadType",
          "optional": true,
          "type": {
            "type": "string",
            "allowedValues": ["JSON", "FORM_ENCODED"]
          }
        },
        {
          "name": "UsernameField",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "FieldIdentifier"
          }
        },
        {
          "name": "PasswordField",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "FieldIdentifier"
          }
        },
        {
          "name": "AWSManagedRulesBotControlRuleSet",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "AWSManagedRulesBotControlRuleSet"
          }
        },
        {
          "name": "AWSManagedRulesATPRuleSet",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "AWSManagedRulesATPRuleSet"
          }
        },
        {
          "name": "AWSManagedRulesACFPRuleSet",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "AWSManagedRulesACFPRuleSet"
          }
        }
      ]
    },
    "AWSManagedRulesBotControlRuleSet": {
      "type": "object",
      "description": "Configures how to use the Bot Control managed rule group in the web ACL",
      "properties": [
        {
          "name": "InspectionLevel",
          "optional": false,
          "type": {
            "type": "string",
            "allowedValues": ["COMMON", "TARGETED"]
          }
        },
        {
          "name": "EnableMachineLearning",
          "optional": true,
          "type": {
            "type": "boolean"
          }
        }
      ]
    },
    "AWSManagedRulesATPRuleSet": {
      "type": "object",
      "description": "Configures how to use the Account Takeover Prevention managed rule group in the web ACL",
      "properties": [
        {
          "name": "LoginPath",
          "optional": false,
          "type": {
            "type": "string"
          }
        },
        {
          "name": "EnableRegexInPath",
          "optional": true,
          "type": {
            "type": "boolean"
          }
        },
        {
          "name": "RequestInspection",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RequestInspection"
          }
        },
        {
          "name": "ResponseInspection",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ResponseInspection"
          }
        }
      ]
    },
    "AWSManagedRulesACFPRuleSet": {
      "type": "object",
      "description": "Configures how to use the Account creation fraud prevention managed rule group in the web ACL",
      "properties": [
        {
          "name": "CreationPath",
          "optional": false,
          "type": {
            "type": "string"
          }
        },
        {
          "name": "RegistrationPagePath",
          "optional": false,
          "type": {
            "type": "string"
          }
        },
        {
          "name": "RequestInspection",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "RequestInspectionACFP"
          }
        },
        {
          "name": "ResponseInspection",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ResponseInspection"
          }
        },
        {
          "name": "EnableRegexInPath",
          "optional": true,
          "type": {
            "type": "boolean"
          }
        }
      ]
    },
    "RequestInspection": {
      "type": "object",
      "description": "Configures the inspection of login requests",
      "properties": [
        {
          "name": "PayloadType",
          "optional": false,
          "type": {
            "type": "string",
            "allowedValues": ["JSON", "FORM_ENCODED"]
          }
        },
        {
          "name": "UsernameField",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "FieldIdentifier"
          }
        },
        {
          "name": "PasswordField",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "FieldIdentifier"
          }
        }
      ]
    },
    "RequestInspectionACFP": {
      "type": "object",
      "description": "Configures the inspection of sign-up requests",
      "properties": [
        {
          "name": "PayloadType",
          "optional": false,
          "type": {
            "type": "string",
            "allowedValues": ["JSON", "FORM_ENCODED"]
          }
        },
        {
          "name": "UsernameField",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "FieldIdentifier"
          }
        },
        {
          "name": "PasswordField",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "FieldIdentifier"
          }
        },
        {
          "name": "EmailField",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "FieldIdentifier"
          }
        },
        {
          "name": "PhoneNumberFields",
          "optional": true,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "PhoneNumberField"
            }
          }
        },
        {
          "name": "AddressFields",
          "optional": true,
          "type": {
            "type": "array",
            "itemType": {
              "type": "ref",
              "typeName": "AddressField"
            }
          }
        }
      ]
    },
    "ResponseInspection": {
      "type": "object",
      "description": "Configures the inspection of login responses",
      "properties": [
        {
          "name": "StatusCode",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ResponseInspectionStatusCode"
          }
        },
        {
          "name": "Header",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ResponseInspectionHeader"
          }
        },
        {
          "name": "BodyContains",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ResponseInspectionBodyContains"
          }
        },
        {
          "name": "Json",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "ResponseInspectionJson"
          }
        }
      ]
    },
    "ResponseInspectionStatusCode": {
      "type": "object",
      "description": "Response status codes that indicate success or failure of a login request",
      "properties": [
        {
          "name": "SuccessCodes",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "number",
              "isInteger": true
            },
            "maxLength": 10,
            "minLength": 1
          }
        },
        {
          "name": "FailureCodes",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "number",
              "isInteger": true
            },
            "maxLength": 10,
            "minLength": 1
          }
        }
      ]
    },
    "ResponseInspectionHeader": {
      "type": "object",
      "description": "Response headers that indicate success or failure of a login request",
      "properties": [
        {
          "name": "Name",
          "optional": false,
          "type": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "pattern": ".*\\S.*"
          }
        },
        {
          "name": "SuccessValues",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1,
              "pattern": ".*\\S.*"
            },
            "maxLength": 3,
            "minLength": 1
          }
        },
        {
          "name": "FailureValues",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1,
              "pattern": ".*\\S.*"
            },
            "maxLength": 3,
            "minLength": 1
          }
        }
      ]
    },
    "ResponseInspectionBodyContains": {
      "type": "object",
      "description": "Response body contents that indicate success or failure of a login request",
      "properties": [
        {
          "name": "SuccessStrings",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1,
              "pattern": ".*\\S.*"
            },
            "maxLength": 5,
            "minLength": 1
          }
        },
        {
          "name": "FailureStrings",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1,
              "pattern": ".*\\S.*"
            },
            "maxLength": 5,
            "minLength": 1
          }
        }
      ]
    },
    "ResponseInspectionJson": {
      "type": "object",
      "description": "Response JSON that indicate success or failure of a login request",
      "properties": [
        {
          "name": "Identifier",
          "optional": false,
          "type": {
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "pattern": ".*\\S.*"
          }
        },
        {
          "name": "SuccessValues",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1,
              "pattern": ".*\\S.*"
            },
            "maxLength": 5,
            "minLength": 1
          }
        },
        {
          "name": "FailureValues",
          "optional": false,
          "type": {
            "type": "array",
            "itemType": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1,
              "pattern": ".*\\S.*"
            },
            "maxLength": 5,
            "minLength": 1
          }
        }
      ]
    },
    "TokenDomains": {
      "type": "array",
      "description": "List of domains to accept in web request tokens, in addition to the domain of the protected resource.",
      "itemType": {
        "type": "string",
        "maxLength": 253,
        "minLength": 1,
        "pattern": "^[\\w\\.\\-/]+$"
      }
    },
    "AssociationConfig": {
      "type": "object",
      "description": "AssociationConfig for body inspection",
      "properties": [
        {
          "name": "RequestBody",
          "optional": true,
          "type": {
            "type": "ref",
            "typeName": "RequestBody"
          }
        }
      ]
    },
    "RequestBody": {
      "type": "record",
      "description": "Map of AssociatedResourceType and RequestBodyAssociatedResourceTypeConfig",
      "valueType": {
        "type": "ref",
        "typeName": "RequestBodyAssociatedResourceTypeConfig"
      }
    },
    "RequestBodyAssociatedResourceTypeConfig": {
      "type": "object",
      "description": "Configures the inspection size in the request body.",
      "properties": [
        {
          "name": "DefaultSizeInspectionLimit",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "SizeInspectionLimit"
          }
        }
      ]
    },
    "SizeInspectionLimit": {
      "type": "string",
      "allowedValues": ["KB_16", "KB_32", "KB_48", "KB_64"]
    },
    "PhoneNumberField": {
      "type": "ref",
      "typeName": "FieldIdentifier"
    },
    "AddressField": {
      "type": "ref",
      "typeName": "FieldIdentifier"
    },
    "FieldIdentifier": {
      "type": "object",
      "properties": [
        {
          "name": "Identifier",
          "optional": false,
          "type": {
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "pattern": ".*\\S.*"
          }
        }
      ]
    },
    "Headers": {
      "type": "object",
      "description": "Includes headers of a web request.",
      "properties": [
        {
          "name": "MatchPattern",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "HeaderMatchPattern"
          }
        },
        {
          "name": "MatchScope",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "MapMatchScope"
          }
        },
        {
          "name": "OversizeHandling",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "OversizeHandling"
          }
        }
      ]
    },
    "Cookies": {
      "type": "object",
      "description": "Includes headers of a web request.",
      "properties": [
        {
          "name": "MatchPattern",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "CookieMatchPattern"
          }
        },
        {
          "name": "MatchScope",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "MapMatchScope"
          }
        },
        {
          "name": "OversizeHandling",
          "optional": false,
          "type": {
            "type": "ref",
            "typeName": "OversizeHandling"
          }
        }
      ]
    },
    "HeaderMatchPattern": {
      "type": "object",
      "description": "The pattern to look for in the request headers.",
      "properties": [
        {
          "name": "All",
          "description": "Inspect all parts of the web request headers.",
          "optional": true,
          "type": {
            "type": "record",
            "description": "Inspect all parts of the web request headers."
          }
        },
        {
          "name": "IncludedHeaders",
          "optional": true,
          "type": {
            "type": "array",
            "itemType": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": ".*\\S.*"
            },
            "maxLength": 199,
            "minLength": 1
          }
        },
        {
          "name": "ExcludedHeaders",
          "optional": true,
          "type": {
            "type": "array",
            "itemType": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": ".*\\S.*"
            },
            "maxLength": 199,
            "minLength": 1
          }
        }
      ]
    },
    "CookieMatchPattern": {
      "type": "object",
      "description": "The pattern to look for in the request cookies.",
      "properties": [
        {
          "name": "All",
          "description": "Inspect all parts of the web request cookies.",
          "optional": true,
          "type": {
            "type": "record",
            "description": "Inspect all parts of the web request cookies."
          }
        },
        {
          "name": "IncludedCookies",
          "optional": true,
          "type": {
            "type": "array",
            "itemType": {
              "type": "string",
              "maxLength": 60,
              "minLength": 1,
              "pattern": ".*\\S.*"
            },
            "maxLength": 199,
            "minLength": 1
          }
        },
        {
          "name": "ExcludedCookies",
          "optional": true,
          "type": {
            "type": "array",
            "itemType": {
              "type": "string",
              "maxLength": 60,
              "minLength": 1,
              "pattern": ".*\\S.*"
            },
            "maxLength": 199,
            "minLength": 1
          }
        }
      ]
    },
    "MapMatchScope": {
      "type": "string",
      "description": "The parts of the request to match against using the MatchPattern.",
      "allowedValues": ["ALL", "KEY", "VALUE"]
    },
    "OversizeHandling": {
      "type": "string",
      "description": "Handling of requests containing oversize fields",
      "allowedValues": ["CONTINUE", "MATCH", "NO_MATCH"]
    },
    "SensitivityLevel": {
      "type": "string",
      "description": "Sensitivity Level current only used for sqli match statements.",
      "allowedValues": ["LOW", "HIGH"]
    }
  },
  "resource": {
    "type": "object",
    "description": "Contains the Rules that identify the requests that you want to allow, block, or count. In a WebACL, you also specify a default action (ALLOW or BLOCK), and the action for each Rule that you add to a WebACL, for example, block requests from specified IP addresses or block requests from specified referrers. You also associate the WebACL with a CloudFront distribution to identify the requests that you want AWS WAF to filter. If you add more than one Rule to a WebACL, a request needs to match only one of the specifications to be allowed, blocked, or counted.",
    "properties": [
      {
        "name": "DefaultAction",
        "optional": false,
        "type": {
          "type": "ref",
          "typeName": "DefaultAction"
        }
      },
      {
        "name": "Description",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "EntityDescription"
        }
      },
      {
        "name": "Name",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "EntityName"
        }
      },
      {
        "name": "Scope",
        "optional": false,
        "type": {
          "type": "ref",
          "typeName": "Scope"
        }
      },
      {
        "name": "Rules",
        "description": "Collection of Rules.",
        "optional": true,
        "type": {
          "type": "array",
          "description": "Collection of Rules.",
          "itemType": {
            "type": "ref",
            "typeName": "Rule"
          }
        }
      },
      {
        "name": "VisibilityConfig",
        "optional": false,
        "type": {
          "type": "ref",
          "typeName": "VisibilityConfig"
        }
      },
      {
        "name": "Tags",
        "optional": true,
        "type": {
          "type": "array",
          "itemType": {
            "type": "ref",
            "typeName": "Tag"
          },
          "minLength": 1
        }
      },
      {
        "name": "CustomResponseBodies",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "CustomResponseBodies"
        }
      },
      {
        "name": "CaptchaConfig",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "CaptchaConfig"
        }
      },
      {
        "name": "ChallengeConfig",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "ChallengeConfig"
        }
      },
      {
        "name": "TokenDomains",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "TokenDomains"
        }
      },
      {
        "name": "AssociationConfig",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "AssociationConfig"
        }
      }
    ]
  },
  "attributes": {
    "type": "object",
    "description": "Contains the Rules that identify the requests that you want to allow, block, or count. In a WebACL, you also specify a default action (ALLOW or BLOCK), and the action for each Rule that you add to a WebACL, for example, block requests from specified IP addresses or block requests from specified referrers. You also associate the WebACL with a CloudFront distribution to identify the requests that you want AWS WAF to filter. If you add more than one Rule to a WebACL, a request needs to match only one of the specifications to be allowed, blocked, or counted.",
    "properties": [
      {
        "name": "Arn",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "ResourceArn"
        }
      },
      {
        "name": "Capacity",
        "optional": true,
        "type": {
          "type": "number",
          "isInteger": true,
          "minimum": 0
        }
      },
      {
        "name": "Id",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "EntityId"
        }
      },
      {
        "name": "LabelNamespace",
        "optional": true,
        "type": {
          "type": "ref",
          "typeName": "LabelName"
        }
      }
    ]
  },
  "$hash": "47fda9c76d3df9c133481add11fa49ecea376dfb"
}
