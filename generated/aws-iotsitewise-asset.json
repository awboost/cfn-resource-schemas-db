{
  "definitions": {
    "AssetHierarchy": {
      "type": "object",
      "description": "A hierarchy specifies allowed parent/child asset relationships.",
      "properties": [
        {
          "name": "ChildAssetId",
          "description": "The ID of the child asset to be associated.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "The ID of the child asset to be associated."
          }
        },
        {
          "name": "LogicalId",
          "description": "The LogicalID of a hierarchy in the parent asset's model.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "The LogicalID of a hierarchy in the parent asset's model.",
            "maxLength": 256,
            "minLength": 1,
            "pattern": "[^\\u0000-\\u001F\\u007F]+"
          }
        }
      ]
    },
    "AssetProperty": {
      "type": "object",
      "description": "The asset property's definition, alias, unit, and notification state.",
      "properties": [
        {
          "name": "Alias",
          "description": "The property alias that identifies the property.",
          "optional": true,
          "type": {
            "type": "string",
            "description": "The property alias that identifies the property."
          }
        },
        {
          "name": "LogicalId",
          "description": "Customer provided ID for property.",
          "optional": false,
          "type": {
            "type": "string",
            "description": "Customer provided ID for property.",
            "maxLength": 256,
            "minLength": 1,
            "pattern": "[^\\u0000-\\u001F\\u007F]+"
          }
        },
        {
          "name": "NotificationState",
          "description": "The MQTT notification state (ENABLED or DISABLED) for this asset property.",
          "optional": true,
          "type": {
            "type": "string",
            "description": "The MQTT notification state (ENABLED or DISABLED) for this asset property.",
            "allowedValues": ["ENABLED", "DISABLED"]
          }
        },
        {
          "name": "Unit",
          "description": "The unit of measure (such as Newtons or RPM) of the asset property. If you don't specify a value for this parameter, the service uses the value of the assetModelProperty in the asset model.",
          "optional": true,
          "type": {
            "type": "string",
            "description": "The unit of measure (such as Newtons or RPM) of the asset property. If you don't specify a value for this parameter, the service uses the value of the assetModelProperty in the asset model."
          }
        }
      ]
    },
    "Tag": {
      "type": "object",
      "properties": [
        {
          "name": "Key",
          "optional": false,
          "type": {
            "type": "string"
          }
        },
        {
          "name": "Value",
          "optional": false,
          "type": {
            "type": "string"
          }
        }
      ]
    }
  },
  "resource": {
    "type": "object",
    "description": "Resource schema for AWS::IoTSiteWise::Asset",
    "properties": [
      {
        "name": "AssetDescription",
        "description": "A description for the asset",
        "optional": true,
        "type": {
          "type": "string",
          "description": "A description for the asset"
        }
      },
      {
        "name": "AssetHierarchies",
        "optional": true,
        "type": {
          "type": "array",
          "itemType": {
            "type": "ref",
            "typeName": "AssetHierarchy"
          }
        }
      },
      {
        "name": "AssetModelId",
        "description": "The ID of the asset model from which to create the asset.",
        "optional": false,
        "type": {
          "type": "string",
          "description": "The ID of the asset model from which to create the asset."
        }
      },
      {
        "name": "AssetName",
        "description": "A unique, friendly name for the asset.",
        "optional": false,
        "type": {
          "type": "string",
          "description": "A unique, friendly name for the asset."
        }
      },
      {
        "name": "AssetProperties",
        "optional": true,
        "type": {
          "type": "array",
          "itemType": {
            "type": "ref",
            "typeName": "AssetProperty"
          }
        }
      },
      {
        "name": "Tags",
        "description": "A list of key-value pairs that contain metadata for the asset.",
        "optional": true,
        "type": {
          "type": "array",
          "description": "A list of key-value pairs that contain metadata for the asset.",
          "itemType": {
            "type": "ref",
            "typeName": "Tag"
          }
        }
      }
    ]
  },
  "awsTypeName": "AWS::IoTSiteWise::Asset",
  "attributes": {
    "type": "object",
    "description": "Resource schema for AWS::IoTSiteWise::Asset",
    "properties": [
      {
        "name": "AssetArn",
        "description": "The ARN of the asset",
        "optional": true,
        "type": {
          "type": "string",
          "description": "The ARN of the asset"
        }
      },
      {
        "name": "AssetId",
        "description": "The ID of the asset",
        "optional": true,
        "type": {
          "type": "string",
          "description": "The ID of the asset"
        }
      }
    ]
  },
  "$hash": "22976dcc942f3270e8ff8d815dbc9f987d19999f"
}
